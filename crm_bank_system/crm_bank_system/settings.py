"""
Django settings for crm_bank_system project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
import sys

import environ
from pathlib import Path
from datetime import timedelta

import pymongo
from django.conf.global_settings import AUTH_USER_MODEL


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env()
environ.Env.read_env()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'admins',
    'customers',
    'documents',
    'loans',
    'notifications',
    'transactions',
    'users',
    'django_celery_beat',
    'payments',
    'news',
    'friendship',
    'trades',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'customers.middleware.ClearMessagesMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'users.authentication_backends.EmailOrUsernameBackend',
]

ROOT_URLCONF = 'crm_bank_system.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates/'),
                 os.path.join(BASE_DIR, 'templates/admin/'),
                 os.path.join(BASE_DIR, 'templates/customers/')
                 ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'crm_bank_system.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASS"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': 5432,
    },
}

# Connect to MongoDB

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.CustomUser'


from kombu import Exchange, Queue

CELERY_BROKER_URL = 'amqp://petyaslonn:pass123pass@rabbitmq:5672//'
CELERY_RESULT_BACKEND = 'rpc://'
CELERY_TASK_DEFAULT_QUEUE = 'default'
CELERY_TASK_ACKS_LATE = True
CELERY_TASK_PUBLISH_RETRY = True
CELERY_TASK_TIME_LIMIT = 30
CELERY_TASK_SOFT_TIME_LIMIT = 25
CELERY_RESULT_EXPIRES = 3600
CELERY_TASK_ROUTES = {
    'send_registration_notification': {'queue': 'email'},
    'users.tasks.add_salary_to_card': {'queue': 'salary'},
    'users.tasks.send_verification_code': {'queue': 'pass_recovery'}
}
CELERY_WORKER_PREFETCH_MULTIPLIER = 1
CELERY_TASK_SERIALIZER = 'json'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True

CELERY_BEAT_SCHEDULE = {
    'add_salary_to_card': {
        'task': 'users.tasks.add_salary_to_card',
        'schedule': 60.0
    },
}

RABBITMQ_SETTINGS = {
    'queue': {
        'durable': True,
        'arguments': {
            'x-message-ttl': 60000,
            'x-dead-letter-exchange': 'dlx_exchange',
            'x-alternate-exchange': 'alternate_exchange',
        }
    },
    'exchange': {
        'type': 'direct',
        'durable': True,
        'publisher-confirms': True,
    },
    'consumer': {
        'prefetch-count': 1,
        'no-ack': False
    }
}

CELERY_QUEUES = (
    Queue('registration_notification', Exchange('registration_notification', type='direct'), routing_key='registration_notification', **RABBITMQ_SETTINGS['queue']),
    Queue('salary', Exchange('salary', type='direct'), routing_key='salary', **RABBITMQ_SETTINGS['queue']),
    Queue('admin_registration_notification', Exchange('admin_registration_notification', type='direct'), routing_key='admin_registration_notification', **RABBITMQ_SETTINGS['queue']),
    Queue('pass_recovery', Exchange('pass_recovery', type='direct'), routing_key='pass_recovery', **RABBITMQ_SETTINGS['queue'])
)

CELERY_DEFAULT_EXCHANGE = 'default'
CELERY_DEFAULT_EXCHANGE_TYPE = 'direct'
CELERY_DEFAULT_ROUTING_KEY = 'default'

CELERY_ROUTES = {
    'users.tasks.send_registration_notification': {'queue': 'registration_notification', 'routing_key': 'registration_notification'},
    'users.tasks.send_admin_notification': {'queue': 'admin_registration_notification', 'routing_key': 'admin_registration_notification'},
    'users.tasks.send_verification_code': {'queue': 'pass_recovery', 'routing_key': 'pass_recovery'},
    'process_data': {'queue': 'data', 'routing_key': 'data'}
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
SERVER_EMAIL = EMAIL_HOST_USER
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')