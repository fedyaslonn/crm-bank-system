# Generated by Django 5.1.3 on 2024-11-29 22:45

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('role', models.CharField(choices=[('AD', 'admin'), ('CS', 'cashier'), ('US', 'user'), ('LS', 'lending specialist'), ('SW', 'service worker'), ('MA', 'manager')], help_text='Роль пользователя', max_length=2)),
                ('profile_photo', models.URLField(blank=True, help_text='Фото профиля', null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('salary', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Зарплата пользователя')),
            ],
            options={
                'verbose_name': 'Модель пользователя',
                'db_table': 'Users',
                'indexes': [models.Index(fields=['username', 'first_name', 'last_name'], name='Users_usernam_6e3469_idx')],
            },
        ),
        migrations.CreateModel(
            name='RegistrationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_role', models.CharField(choices=[('AD', 'admin'), ('CS', 'cashier'), ('US', 'user'), ('LS', 'lending specialist'), ('SW', 'service worker'), ('MA', 'manager')], help_text='Запрашиваемая роль', max_length=2)),
                ('status', models.CharField(choices=[('Pending', 'В ожидании'), ('Approved', 'Одобрено'), ('Rejected', 'Отклонено')], default='Pending', max_length=10)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserClientCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=16, verbose_name='Баланс на карте в USD')),
                ('card_number', models.CharField(max_length=16, unique=True, validators=[django.core.validators.MinLengthValidator(16, message='Номер карты должен быть минимум 16 символов'), django.core.validators.MaxLengthValidator(16, message='Номер карты должен быть максимум 16 символов')], verbose_name='Номер карты')),
                ('expiration_date', models.DateTimeField(verbose_name='Срок действия')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='Активна')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Карта клиента',
                'verbose_name_plural': 'Криптовалютные карты клиентов',
                'db_table': 'Client_Cards',
                'ordering': ['-created_at'],
            },
        ),
    ]
